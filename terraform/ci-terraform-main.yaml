name: $(date:yyyyMMdd)$(rev:.r)

trigger:
  branches:
    include:
    - 'master'
  paths:
    include:
    - 'terraform/main/*'

variables:
  serviceConnection: 'az-sub-devops'
  terraformWorkingDirectory: '$(System.DefaultWorkingDirectory)/terraform/main'
  terraformVersion: '0.13.0'
  
stages:
  - stage: Validate
    displayName: Validate
    jobs:
    - job: TerraformIntegrationJob
      displayName: TerraformIntegrationJob - CI Job
      pool:
        vmImage: ubuntu-20.04
      steps:      
      - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
        displayName: 'Install Terraform $(terraformVersion)'
        inputs:
          terraformVersion: $(terraformVersion)

      - bash: docker run --rm -v "$(pwd):/src" tfsec/tfsec-alpine /src
        workingDirectory: $(terraformWorkingDirectory)
        displayName: 'Run tfsec Analysis'

      - bash: terraform init -backend=false
        workingDirectory: $(terraformWorkingDirectory)
        displayName: 'Terraform init'

      - bash: terraform validate
        workingDirectory: $(terraformWorkingDirectory)
        displayName: 'Terraform validate'
      
      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: '$(terraformWorkingDirectory)'
          includeRootFolder: true
          archiveType: 'zip'
          archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
          replaceExistingArchive: true

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'drop'
          publishLocation: 'Container'